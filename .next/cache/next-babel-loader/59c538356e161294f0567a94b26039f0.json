{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SignUpMutation($email: String!, $password: String!) {\\n    signUp(input: { email: $email, password: $password }) {\\n      user {\\n        id\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport Field from '../components/field';\nimport { getErrorMessage } from '../lib/form';\nimport { useRouter } from 'next/router';\nvar SignUpMutation = gql(_templateObject());\n\nfunction SignUp() {\n  var _useMutation = useMutation(SignUpMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signUp = _useMutation2[0];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      errorMsg = _React$useState2[0],\n      setErrorMsg = _React$useState2[1];\n\n  var router = useRouter();\n\n  function handleSubmit(event) {\n    var emailElement, passwordElement;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            emailElement = event.currentTarget.elements.email;\n            passwordElement = event.currentTarget.elements.password;\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(signUp({\n              variables: {\n                email: emailElement.value,\n                password: passwordElement.value\n              }\n            }));\n\n          case 6:\n            router.push('/signin');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            setErrorMsg(getErrorMessage(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 9]], Promise);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sign Up\"), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, errorMsg && __jsx(\"p\", null, errorMsg), __jsx(Field, {\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    required: true,\n    label: \"Email\"\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    required: true,\n    label: \"Password\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Sign up\"), \" or\", ' ', __jsx(Link, {\n    href: \"signin\"\n  }, __jsx(\"a\", null, \"Sign in\"))));\n}\n\nexport default withApollo(SignUp);","map":null,"metadata":{},"sourceType":"module"}