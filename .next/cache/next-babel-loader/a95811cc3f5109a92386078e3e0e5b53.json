{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport Field from '../components/field';\nimport { getErrorMessage } from '../lib/form';\nimport { useRouter } from 'next/router';\nconst SignUpMutation = gql`\n  mutation SignUpMutation($email: String!, $password: String!) {\n    signUp(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }\n`;\n\nfunction SignUp() {\n  const [signUp] = useMutation(SignUpMutation);\n  const [errorMsg, setErrorMsg] = React.useState();\n  const router = useRouter();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const emailElement = event.currentTarget.elements.email;\n    const passwordElement = event.currentTarget.elements.password;\n\n    try {\n      await signUp({\n        variables: {\n          email: emailElement.value,\n          password: passwordElement.value\n        }\n      });\n      router.push('/signin');\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Sign Up\"), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, errorMsg && __jsx(\"p\", null, errorMsg), __jsx(Field, {\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    required: true,\n    label: \"Email\"\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    required: true,\n    label: \"Password\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Sign up\"), \" or\", ' ', __jsx(Link, {\n    href: \"signin\"\n  }, __jsx(\"a\", null, \"Sign in\"))));\n}\n\nexport default withApollo(SignUp);","map":null,"metadata":{},"sourceType":"module"}