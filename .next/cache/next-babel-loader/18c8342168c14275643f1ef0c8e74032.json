{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\NEXT\\\\api-routes-apollo-server-and-client-auth\\\\pages\\\\signin.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport Field from '../components/field';\nimport { getErrorMessage } from '../lib/form';\nimport { useRouter } from 'next/router';\nconst SignInMutation = gql`\n  mutation SignInMutation($email: String!, $password: String!) {\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }\n`;\n\nfunction SignIn() {\n  const [signIn] = useMutation(SignInMutation);\n  const [errorMsg, setErrorMsg] = React.useState();\n  const router = useRouter();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const emailElement = event.currentTarget.elements.email;\n    const passwordElement = event.currentTarget.elements.password;\n\n    try {\n      const {\n        data\n      } = await signIn({\n        variables: {\n          email: emailElement.value,\n          password: passwordElement.value\n        }\n      });\n\n      if (data.signIn.user) {\n        router.push('/');\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, errorMsg && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }, errorMsg), __jsx(Field, {\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    required: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    required: true,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), \" or\", ' ', __jsx(Link, {\n    href: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\n\nexport default withApollo(SignIn);","map":{"version":3,"sources":["D:/DEV/NEXT/api-routes-apollo-server-and-client-auth/pages/signin.js"],"names":["React","Link","withApollo","gql","useMutation","Field","getErrorMessage","useRouter","SignInMutation","SignIn","signIn","errorMsg","setErrorMsg","useState","router","handleSubmit","event","preventDefault","emailElement","currentTarget","elements","email","passwordElement","password","data","variables","value","user","push","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,cAAc,GAAGL,GAAI;;;;;;;;;CAA3B;;AAWA,SAASM,MAAT,GAAkB;AAChB,QAAM,CAACC,MAAD,IAAWN,WAAW,CAACI,cAAD,CAA5B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACa,QAAN,EAAhC;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAEA,iBAAeQ,YAAf,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,YAAY,GAAGF,KAAK,CAACG,aAAN,CAAoBC,QAApB,CAA6BC,KAAlD;AACA,UAAMC,eAAe,GAAGN,KAAK,CAACG,aAAN,CAAoBC,QAApB,CAA6BG,QAArD;;AAEA,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,MAAM,CAAC;AAC5Be,QAAAA,SAAS,EAAE;AACTJ,UAAAA,KAAK,EAAEH,YAAY,CAACQ,KADX;AAETH,UAAAA,QAAQ,EAAED,eAAe,CAACI;AAFjB;AADiB,OAAD,CAA7B;;AAMA,UAAIF,IAAI,CAACd,MAAL,CAAYiB,IAAhB,EAAsB;AACpBb,QAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AACD;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdjB,MAAAA,WAAW,CAACN,eAAe,CAACuB,KAAD,CAAhB,CAAX;AACD;AACF;;AAED,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAJ,CADf,EAEE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,YAAY,EAAC,UAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC,UALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,SAgB4C,GAhB5C,EAiBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAjBF,CAFF,CADF;AA0BD;;AAED,eAAeT,UAAU,CAACO,MAAD,CAAzB","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { withApollo } from '../apollo/client'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport Field from '../components/field'\nimport { getErrorMessage } from '../lib/form'\nimport { useRouter } from 'next/router'\n\nconst SignInMutation = gql`\n  mutation SignInMutation($email: String!, $password: String!) {\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nfunction SignIn() {\n  const [signIn] = useMutation(SignInMutation)\n  const [errorMsg, setErrorMsg] = React.useState()\n  const router = useRouter()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n\n    const emailElement = event.currentTarget.elements.email\n    const passwordElement = event.currentTarget.elements.password\n\n    try {\n      const { data } = await signIn({\n        variables: {\n          email: emailElement.value,\n          password: passwordElement.value,\n        },\n      })\n      if (data.signIn.user) {\n        router.push('/')\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error))\n    }\n  }\n\n  return (\n    <>\n      <h1>Sign In</h1>\n      <form onSubmit={handleSubmit}>\n        {errorMsg && <p>{errorMsg}</p>}\n        <Field\n          name=\"email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          required\n          label=\"Email\"\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"password\"\n          required\n          label=\"Password\"\n        />\n        <button type=\"submit\">Sign in</button> or{' '}\n        <Link href=\"signup\">\n          <a>Sign up</a>\n        </Link>\n      </form>\n    </>\n  )\n}\n\nexport default withApollo(SignIn)\n"]},"metadata":{},"sourceType":"module"}